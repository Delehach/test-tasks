{"version":3,"sources":["Dropdown/Dropdown.tsx","App/App.tsx","index.tsx"],"names":["Dropdown","target","children","useState","dropdownDisplay","setDropdownDisplay","dropdownPosition","setDropDownPosition","buttonRef","useRef","dropdownRef","dropdownStyles","display","bottom","useLayoutEffect","current","btnData","getBoundingClientRect","dropdownData","top","height","window","innerHeight","className","onClick","ref","style","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAQO,SAASA,EAAT,GAAsD,IAAnCC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,SAA0B,EACbC,oBAAkB,GADL,mBACpDC,EADoD,KACnCC,EADmC,OAEXF,mBAAiB,QAFN,mBAEpDG,EAFoD,KAElCC,EAFkC,KAGrDC,EAAYC,iBAA0B,MACtCC,EAAcD,iBAAuB,MAErCE,EAAiB,CACtBC,QAASR,EAAe,eACxBS,OAAQP,GAcT,OAXAQ,2BAAgB,WACf,GAAGN,GAAaA,EAAUO,SAAWL,GAAeA,EAAYK,QAAS,CACxE,IAAMC,EAAUR,EAAUO,QAAQE,wBAC5BC,EAAeR,EAAYK,QAAQE,wBACbD,EAAQG,IAAMH,EAAQI,OAASF,EAAaE,OAC9CC,OAAOC,aAChCf,EAAoB,GAAD,OAAIS,EAAQI,OAAZ,UAGnB,CAAChB,IAGH,yBAAKmB,UAAU,YACd,4BACCC,QAAS,kBAAMnB,GAAoBD,IACnCqB,IAAKjB,GAEJP,GAEF,yBAAKsB,UAAU,oBAAoBE,IAAKf,EAAagB,MAAOf,GAAiBT,I,MClCzE,SAASyB,IACd,OACE,yBAAKJ,UAAU,OACX,gCACI,kBAAC,EAAD,CAAUtB,OAAO,UACb,4BACI,sCACA,sCACA,yCAIZ,gCACI,kBAAC,EAAD,CAAUA,OAAO,UACb,4BACI,sCACA,sCACA,0CChBpB2B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.8492c0b9.chunk.js","sourcesContent":["import React, {ReactNode, useLayoutEffect, useRef, useState} from 'react';\nimport './Dropdown.css';\n\ninterface DropdownProps {\n\ttarget: ReactNode;\n\tchildren: ReactNode;\n}\n\nexport function Dropdown({target, children}: DropdownProps) {\n\tconst [dropdownDisplay, setDropdownDisplay] = useState<boolean>(false);\n\tconst [dropdownPosition, setDropDownPosition] = useState<string>('auto');\n\tconst buttonRef = useRef<HTMLButtonElement>(null);\n\tconst dropdownRef = useRef<HTMLDivElement>(null);\n\n\tconst dropdownStyles = {\n\t\tdisplay: dropdownDisplay ? `block` : `none`,\n\t\tbottom: dropdownPosition,\n\t}\n\n\tuseLayoutEffect(() => {\n\t\tif(buttonRef && buttonRef.current && dropdownRef && dropdownRef.current) {\n\t\t\tconst btnData = buttonRef.current.getBoundingClientRect();\n\t\t\tconst dropdownData = dropdownRef.current.getBoundingClientRect();\n\t\t\tconst totalDropdownHeight = btnData.top + btnData.height + dropdownData.height;\n\t\t\tif (totalDropdownHeight > window.innerHeight) {\n\t\t\t\tsetDropDownPosition(`${btnData.height}px`);\n\t\t\t}\n\t\t}\n\t}, [dropdownDisplay])\n\n\treturn (\n\t\t<div className='dropdown'>\n\t\t\t<button\n\t\t\t\tonClick={() => setDropdownDisplay(!dropdownDisplay)}\n\t\t\t\tref={buttonRef}\n\t\t\t>\n\t\t\t\t{target}\n\t\t\t</button>\n\t\t\t<div className='dropdown__content' ref={dropdownRef} style={dropdownStyles}>{children}</div>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport {Dropdown} from '../Dropdown';\nimport './App.css';\n\nexport function App() {\n  return (\n    <div className=\"app\">\n        <header>\n            <Dropdown target='Expand'>\n                <ul>\n                    <li>Item 1</li>\n                    <li>Item 2</li>\n                    <li>Item 3</li>\n                </ul>\n            </Dropdown>\n        </header>\n        <footer>\n            <Dropdown target='Expand'>\n                <ul>\n                    <li>Item 1</li>\n                    <li>Item 2</li>\n                    <li>Item 3</li>\n                </ul>\n            </Dropdown>\n        </footer>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}