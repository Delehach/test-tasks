{"version":3,"sources":["store/types.js","store/reducers/notesReducer.js","store/reducers/rootReducer.js","store/store.js","store/actions/notesActions.js","components/Sidebar/Header.js","components/Sidebar/Notes.js","components/Sidebar/DeletedNotes.js","components/Sidebar/NotesSearch.js","components/Sidebar/Sidebar.js","components/NoteEditor.js","components/App.js","index.js"],"names":["FETCH_NOTES","SELECT_NOTE","CREATE_NOTE","EDIT_NOTE","MOVE_NOTE_TO_TRASH","DELETE_NOTE","SET_SEARCH_VAL","initialState","allNotes","noteTemplate","id","title","text","status","searchVal","selectedNoteID","rootReducer","combineReducers","notes","state","action","type","payload","map","note","body","parseInt","newNote","Date","now","key","value","filter","store","createStore","compose","applyMiddleware","thunk","actionsCreatorHelper","editNote","Header","dispatch","useDispatch","className","onClick","Notes","useSelector","visibleNotes","toLowerCase","includes","deleteNoteHandler","event","stopPropagation","deleteNote","moveNoteToTrash","isActive","DeletedNotes","deletedNotes","length","NotesSearch","placeholder","onChange","target","Sidebar","useEffect","a","fetch","data","json","console","error","message","NoteEditor","find","html","tagName","replaceAll","App","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8ee806c.chunk.js","sourcesContent":["export const FETCH_NOTES = `NOTES/FETCH_NOTES`;\nexport const SELECT_NOTE = `NOTES/SELECT_NOTE`;\nexport const CREATE_NOTE = `NOTES/CREATE_NOTE`;\nexport const EDIT_NOTE = `NOTES/EDIT_NOTE`;\nexport const MOVE_NOTE_TO_TRASH = `NOTES/MOVE_NOTE_TO_TRASH`;\nexport const DELETE_NOTE = `NOTES/DELETE_NOTE`;\nexport const SET_SEARCH_VAL = `NOTES/SET_SEARCH_VAL`;\n","import {\n  CREATE_NOTE,\n  DELETE_NOTE,\n  EDIT_NOTE,\n  FETCH_NOTES,\n  MOVE_NOTE_TO_TRASH,\n  SELECT_NOTE,\n  SET_SEARCH_VAL\n} from \"../types\";\n\nconst initialState = {\n  allNotes: [],\n  noteTemplate: {\n    id: null,\n    title: 'New note',\n    text: '',\n    status: 'active',\n  },\n  searchVal: '',\n  selectedNoteID: 1,\n}\n\nexport const notesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_NOTES:\n      return {\n        ...state, allNotes: action.payload.map(note => ({\n          id: note.id,\n          title: note.title,\n          text: note.body,\n          status: 'active',\n        }))\n      };\n\n    case SELECT_NOTE:\n      return {...state, selectedNoteID: parseInt(action.payload)};\n\n    case CREATE_NOTE:\n      const newNote = {...state.noteTemplate, id: Date.now()};\n      return {\n        ...state,\n        allNotes: [newNote, ...state.allNotes],\n        selectedNoteID: newNote.id\n      };\n\n    case EDIT_NOTE:\n      return {\n        ...state, allNotes: state.allNotes.map(note => {\n          if (note.id === state.selectedNoteID) {\n            return {\n              ...note,\n              [action.payload.key]: action.payload.value,\n            }\n          }\n          return note;\n        })\n      };\n\n    case MOVE_NOTE_TO_TRASH:\n      return {\n        ...state, allNotes: state.allNotes.map(note => {\n          if (note.id === action.payload) {\n            return {\n              ...note,\n              status: 'deleted',\n            }\n          }\n          return note;\n        })\n      };\n\n    case DELETE_NOTE:\n      return {...state, allNotes: state.allNotes.filter(note => note.id !== action.payload)};\n\n    case SET_SEARCH_VAL:\n      return {...state, searchVal: action.payload};\n\n    default:\n      return state;\n  }\n};\n","import {combineReducers} from \"redux\";\nimport {notesReducer} from \"./notesReducer\";\n\nexport const rootReducer = combineReducers({\n  notes: notesReducer,\n});\n","import {createStore, compose, applyMiddleware} from \"redux\";\nimport {rootReducer} from \"./reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\n\nexport const store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(\n      thunk\n    )\n  )\n);\n","import {\n  CREATE_NOTE,\n  DELETE_NOTE,\n  EDIT_NOTE,\n  FETCH_NOTES,\n  MOVE_NOTE_TO_TRASH,\n  SELECT_NOTE,\n  SET_SEARCH_VAL\n} from \"../types\";\n\nconst actionsCreatorHelper = (type, payload) => ({type, payload});\n\nexport const fetchNotes = () => async dispatch => {\n  try {\n    const data = await fetch(`https://jsonplaceholder.typicode.com/posts?_limit=10`);\n    const notes = await data.json();\n\n    dispatch(actionsCreatorHelper(FETCH_NOTES, notes));\n  } catch (e) {\n    console.error(`Fetch notes failed with error: ${e.message}`);\n  }\n};\n\nexport const setSearchVal = value => actionsCreatorHelper(SET_SEARCH_VAL, value);\n\nexport const selectNote = id => actionsCreatorHelper(SELECT_NOTE, id);\n\nexport const createNote = () => actionsCreatorHelper(CREATE_NOTE);\n\nexport const editNote = (key, value) => actionsCreatorHelper(EDIT_NOTE, {key, value});\n\nexport const moveNoteToTrash = id => actionsCreatorHelper(MOVE_NOTE_TO_TRASH, id);\n\nexport const deleteNote = id => actionsCreatorHelper(DELETE_NOTE, id);\n","import React from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {createNote} from \"../../store/actions/notesActions\";\n\nexport default function Header() {\n  const dispatch = useDispatch();\n  return (\n    <div className=\"sidebar-header\">\n      <div className=\"dots\"/>\n      <button type=\"button\" className=\"create-note-btn\" onClick={() => dispatch(createNote())}/>\n    </div>\n  )\n};\n","import React from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {deleteNote, moveNoteToTrash, selectNote} from \"../../store/actions/notesActions\";\n\nexport default function Notes({status = 'active'}) {\n  const dispatch = useDispatch();\n  const notes = useSelector(state => state.notes.allNotes);\n  const searchVal = useSelector(state => state.notes.searchVal);\n  const selectedNoteID = useSelector(state => state.notes.selectedNoteID);\n  const visibleNotes = notes.filter(note => {\n    if (searchVal) {\n      return note.status === status && note.title.toLowerCase().includes(searchVal.toLowerCase());\n    }\n    return note.status === status;\n  });\n\n  const deleteNoteHandler = (event, {status, id}) => {\n    event.stopPropagation();\n    if (status === 'active') {\n      dispatch(moveNoteToTrash(id));\n      return;\n    }\n    dispatch(deleteNote(id));\n  };\n\n  return (\n    <ul className=\"notes-list\">\n      {visibleNotes.map(note => {\n        const isActive = note.id === selectedNoteID ? 'is-active' : '';\n        return (\n          <li\n            key={note.id}\n            className={isActive}\n            title={note.title}\n            onClick={() => dispatch(selectNote(note.id))}\n          >\n            <span>{note.title}</span>\n            <button type=\"button\" onClick={event => deleteNoteHandler(event, note)}/>\n          </li>\n        )\n      })}\n    </ul>\n  )\n};\n","import React from \"react\";\nimport Notes from \"./Notes\";\nimport {useSelector} from \"react-redux\";\n\nexport default function DeletedNotes() {\n  const deletedNotes = useSelector(state => state.notes.allNotes.filter(note => note.status === 'deleted'));\n  return (\n    !deletedNotes.length ? null :\n      <>\n        <div className=\"deleted-counter\">\n          <span>{deletedNotes.length} trashed {deletedNotes.length === 1 ? 'note' : 'notes'}</span>\n        </div>\n        <Notes status={'deleted'}/>\n      </>\n  )\n};\n","import React from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {setSearchVal} from \"../../store/actions/notesActions\";\n\nexport default function NotesSearch() {\n  const dispatch = useDispatch();\n\n  return <input\n    className=\"search-input\"\n    type=\"text\"\n    placeholder={\"Search everywhere\"}\n    onChange={event => dispatch(setSearchVal(event.target.value))}\n  />\n}\n","import React, {useEffect} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport Header from \"./Header\";\nimport Notes from \"./Notes\";\nimport DeletedNotes from \"./DeletedNotes\";\nimport NotesSearch from \"./NotesSearch\";\nimport {fetchNotes} from \"../../store/actions/notesActions\";\n\nexport default function Sidebar() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchNotes());\n  }, []);\n  return (\n    <div className=\"sidebar\">\n      <Header/>\n      <div className=\"sidebar-notes-wrap\">\n        <Notes/>\n        <DeletedNotes/>\n      </div>\n      <NotesSearch/>\n    </div>\n  )\n};\n","import React from \"react\";\nimport ContentEditable from \"react-contenteditable\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {editNote} from \"../store/actions/notesActions\";\n\nexport default function NoteEditor() {\n  const dispatch = useDispatch();\n  const selectedNoteID = useSelector(state => state.notes.selectedNoteID);\n  const note = useSelector(state => state.notes.allNotes.find(note => note.id === selectedNoteID));\n\n  const handleChange = event => {\n    const title = event.target.value.replaceAll(/(<([^>]+)>)/gi, ''); // remove html tags\n    dispatch(editNote('title', title));\n  };\n\n  return (\n    !note ? null :\n      <div className=\"notes-editor\">\n        <ContentEditable\n          html={note.title}\n          tagName={'h3'}\n          onChange={handleChange}\n          className=\"notes-editor-title\"\n        />\n        <ContentEditable\n          html={note.text}\n          onChange={event => dispatch(editNote('text', event.target.value))}\n          className=\"notes-editor-text\"\n        />\n      </div>\n  )\n};\n","import React from \"react\";\nimport Sidebar from \"./Sidebar/Sidebar\";\nimport NoteEditor from \"./NoteEditor\";\n\nexport default function App() {\n  return (\n    <div className=\"container\">\n      <div className=\"notes-wrapper\">\n        <Sidebar/>\n        <NoteEditor/>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {render} from \"react-dom\";\nimport {Provider} from \"react-redux\";\n\nimport {store} from \"./store/store\";\nimport App from \"./components/App\";\nimport \"./index.css\";\n\nrender(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}